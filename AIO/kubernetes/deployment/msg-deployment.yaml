apiVersion: apps/v1
# ===============LICENSE_START=======================================================
# Acumos Apache-2.0
# ===================================================================================
# Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
# ===================================================================================
# This Acumos software file is distributed by AT&T and Tech Mahindra
# under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===============LICENSE_END=========================================================

# What this is: kubernetes template for Acumos microservice-generation deployment
# How to use:

kind: Deployment
metadata:
  namespace: <ACUMOS_NAMESPACE>
  name: msg
  labels:
    app: msg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msg
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: msg
        <ACUMOS_SERVICE_LABEL_KEY>: <ACUMOS_MICROSERVICE_GENERATION_SERVICE_LABEL>
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: <ACUMOS_SERVICE_LABEL_KEY>
                operator: NotIn
                values:
                - <ACUMOS_MICROSERVICE_GENERATION_SERVICE_LABEL>
            topologyKey: "kubernetes.io/node"
      imagePullSecrets:
      - name: acumos-registry
      containers:
      - name: msg
        image: <MICROSERVICE_GENERATION_IMAGE>
        # TODO: assess why privilege is needed in Centos to avoid errors ala '(No such file or directory)'
        securityContext:
          privileged: <ACUMOS_PRIVILEGED_ENABLE>
        command: ["/bin/sh", "-c"]
        args:
        - set -x;
          cd maven;
          java $JAVA_OPTS -Dhttp.proxyHost=$ACUMOS_HTTP_PROXY_HOST -Dhttp.proxyPort=$ACUMOS_HTTP_PROXY_PORT -Dhttp.nonProxyHosts=$ACUMOS_HTTP_NON_PROXY_HOSTS -Dhttps.proxyHost=$ACUMOS_HTTP_PROXY_HOST -Dhttps.proxyPort=$ACUMOS_HTTP_PROXY_PORT -Dhttps.nonProxyHosts=$ACUMOS_HTTP_NON_PROXY_HOSTS -Djava.security.egd=file:/dev/./urandom -jar *.jar
        env:
        - name: ACUMOS_HTTP_NON_PROXY_HOSTS
          value: "<ACUMOS_HTTP_NON_PROXY_HOSTS>|docker-dind-service|cds-service|portal-be-service|sv-scanning-service|msg-service"
        - name: ACUMOS_HTTP_PROXY_HOST
          value: "<ACUMOS_HTTP_PROXY_HOST>"
        - name: ACUMOS_HTTP_PROXY_PORT
          value: "<ACUMOS_HTTP_PROXY_PORT>"
        - name: JAVA_OPTS
          value: "-Xms256m -Xmx2048m"
        - name: SPRING_APPLICATION_JSON
          value: '{
            "logging": {
              "level": {
                "root": "INFO"
              }
            },
            "server":{
              "port": 8336,
              "servlet": {
                "context-path": "/microservice-generation"
              }
            },
            "docker": {
              "host": "<ACUMOS_DOCKER_API_HOST>",
              "port": "<ACUMOS_DOCKER_API_PORT>",
              "config": "/docker_host/.docker",
              "registry":{
                "url": "http://<ACUMOS_DOCKER_REGISTRY_HOST>:<ACUMOS_DOCKER_MODEL_PORT>/",
                "username": "<ACUMOS_DOCKER_REGISTRY_USER>",
                "password": "<ACUMOS_DOCKER_REGISTRY_PASSWORD>",
                "email": "<ACUMOS_ADMIN_EMAIL>"
              },
              "tls": {
                "verify": "false"
              },
              "api": {
                "version": "1.23"
              },
              "imagetag": {
                "prefix": "<ACUMOS_DOCKER_REGISTRY_HOST>:<ACUMOS_DOCKER_MODEL_PORT><ACUMOS_DOCKER_IMAGETAG_PREFIX>"
              },
              "max_total_connections": "1",
              "max_per_route_connections": "1"
            },
            "http_proxy": "\"\"",
            "nexus": {
              "nexusEndPointURL": "http://<ACUMOS_NEXUS_HOST>:<ACUMOS_NEXUS_API_PORT>/<ACUMOS_NEXUS_MAVEN_REPO_PATH>/<ACUMOS_NEXUS_MAVEN_REPO>/",
              "nexusUserName": "<ACUMOS_NEXUS_RW_USER>",
              "nexusPassword": "<ACUMOS_NEXUS_RW_USER_PASSWORD>",
              "nexusproxy": "",
              "nexusGroupId": "<ACUMOS_NEXUS_GROUP>"
            },
            "cmndatasvc": {
              "cmnDataSvcEndPoinURL": "http://<ACUMOS_CDS_HOST>:<ACUMOS_CDS_PORT>/ccds",
              "cmnDataSvcUser": "<ACUMOS_CDS_USER>",
              "cmnDataSvcPwd": "<ACUMOS_CDS_PASSWORD>"
            },
            "mktPlace": {
              "mktPlaceEndPointURL": "http://portal-be-service:8083"
            },
            "microService": {
              "microServiceEndPointURL": "http://msg-service:8336/microservice-generation",
              "microServiceAsyncFlag": "<ACUMOS_MICROSERVICE_GENERATION_ASYNC>"
            },
            "requirements": {
              "extraIndexURL": "",
              "trustedHost": ""
            },
            "base_image": {
              "rimage": "<ONBOARDING_BASE_IMAGE>",
              "dockerusername": "<ACUMOS_PROJECT_NEXUS_USERNAME>",
              "dockerpassword": "<ACUMOS_PROJECT_NEXUS_PASSWORD>"
            },
            "spring": {
              "servlet": {
                "multipart": {
                   "max-file-size": "-1",
                   "max-request-size": "-1"
                }
              }
            },
            "security": {
              "verificationEnableFlag": "<ACUMOS_ENABLE_SECURITY_VERIFICATION>",
              "verificationApiUrl":"http://sv-scanning-service:9082"
            },
            "modelrunnerVersion": {
              "javaSpark": "1.0.2",
              "H2O": "2.2.3"
            }
          }'
        ports:
        - containerPort: 8336
        volumeMounts:
        - mountPath: /maven/logs
          name: logs
      restartPolicy: Always
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: <ACUMOS_MICROSERVICE_GENERATION_SERVICE_LABEL>
