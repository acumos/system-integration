apiVersion: apps/v1
# ===============LICENSE_START=======================================================
# Acumos Apache-2.0
# ===================================================================================
# Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
# ===================================================================================
# This Acumos software file is distributed by AT&T and Tech Mahindra
# under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===============LICENSE_END=========================================================

# What this is: kubernetes template for Acumos docker-proxy deployment
# How to use:

kind: Deployment
metadata:
  namespace: <ACUMOS_NAMESPACE>
  name: docker-proxy
  labels:
    app: docker-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: docker-proxy
        <ACUMOS_SERVICE_LABEL_KEY>: <ACUMOS_DOCKER_PROXY_SERVICE_LABEL>
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: <ACUMOS_SERVICE_LABEL_KEY>
                operator: NotIn
                values:
                - <ACUMOS_DOCKER_PROXY_SERVICE_LABEL>
            topologyKey: "kubernetes.io/node"
      containers:
      - name: docker-proxy
        image: nginx:stable
        securityContext:
            privileged: <ACUMOS_PRIVILEGED_ENABLE>
        imagePullPolicy: IfNotPresent
        env:
        - name: ACUMOS_DOCKER_PROXY_HOST
          value: "<ACUMOS_DOCKER_PROXY_HOST>"
        - name: ACUMOS_DOCKER_PROXY_PORT
          value: "<ACUMOS_DOCKER_PROXY_PORT>"
        - name: ACUMOS_DOCKER_PROXY_AUTH_API_PORT
          value: "8000"
        - name: ACUMOS_DOCKER_PROXY_AUTH_API_PATH
          value: "/auth"
        - name: ACUMOS_AUTH_URL
          value: "http://onboarding-service:8090/onboarding-app/v2/auth/"
        - name: ACUMOS_CDS_URL
          value: "http://<ACUMOS_CDS_HOST>:<ACUMOS_CDS_PORT>/ccds"
        - name: ACUMOS_CDS_USER
          value: "<ACUMOS_CDS_USER>"
        - name: ACUMOS_CDS_PASSWORD
          value: "<ACUMOS_CDS_PASSWORD>"
        - name: ACUMOS_DOCKER_PROXY_LOG_FILE
          value: "/var/log/acumos/docker-proxy.log"
        - name: ACUMOS_DOCKER_PROXY_LOG_LEVEL
          value: "1"
        ports:
        - containerPort: 8443
        command: ["/bin/bash", "-c"]
        args:
        - set -x;
          cp /etc/nginx/conf.d/nginx.conf /etc/nginx/nginx.conf;
          while ! apt-get update;
            do sleep 10;
               echo "Waiting for temporary DNS resolution issue to be fixed";
            done;
          while ! apt-get install -y python python-pip;
            do sleep 10;
               echo "Waiting for temporary DNS resolution issue to be fixed";
            done;
          while ! pip install requests;
            do sleep 10;
               echo "Waiting for temporary DNS resolution issue to be fixed";
            done;
          mkdir -p /var/log/acumos;
          (python /etc/nginx/conf.d/acumos_auth.py &);
          echo 'Acumos authentication proxy started';
          nginx -g "daemon off;"
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: conf-volume
        - mountPath: /var/log/acumos
          name: logs
      restartPolicy: Always
      volumes:
      - name: logs
        persistentVolumeClaim:
         claimName: <ACUMOS_DOCKER_PROXY_SERVICE_LABEL>
      - name: conf-volume
        configMap:
          name: docker-proxy
